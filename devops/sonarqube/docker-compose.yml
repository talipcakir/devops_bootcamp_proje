services:

  # Postgresql
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - dockernetwork

  # JDK
  jdk:
    image: openjdk:latest
    container_name: jdk
    command: sleep infinity
    networks:
      - dockernetwork
    volumes:
      - jdk_volume:/usr/src/myapp
    working_dir: /usr/src/myapp

  # SonarQube
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONARQUBE_JDBC_USERNAME: sonarqube
      SONARQUBE_JDBC_PASSWORD: sonarqube
    depends_on:
      -  postgres
    ports:
      - "9000:9000"
    networks:
      - dockernetwork

# Volumes
volumes:
  postgres_volume:
    driver: local
  jdk_volume:
    driver: local

# Networks
networks:
  dockernetwork:
    name: dockernetwork
    driver: bridge
